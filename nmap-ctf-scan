#!/bin/bash

if [[ -z "$1" ]] ; then
	printf "Usage: $0 <target> [options]\n\n"
	printf "Options:\n"
	printf -- "-N	bypass ping check\n"
	exit 1
fi

printf "### Target: $1 ###\n\n"

if [ "$2" == "-N" ]
then
	printf "### -N option specified.  Skipping ping check. ###\n\n"
else
	printf "### Pinging target ###\n"
	
	if ping -c1 -w1 $1 >/dev/null
	then
		printf "### Host is up ###\n\n"
	else
		printf "### Host is down.  Exiting.  Use the -N option to skip the ping check. ###\n"
		exit
	fi
fi

# Check if ping-scan exists, if it does not, then do the scan.
if [[ -f ./ping-scan ]]
then
	printf "### Skipping -p- scan.  File ./ping-scan already exists. ###\n"
else
	ping_scan="sudo nmap $1 -p- -oN ping-scan --min-rate 1000"
	printf "### Running scan: $ping_scan ###\n" && $ping_scan
	printf "### Scan finished. ###\n"

	open_ports=$(cat ./ping-scan | grep 'open' | awk -F "/" '{print $1}' ORS=",")
	printf "### Open ports: $open_ports ###\n\n"
fi

# Check if ping-scan exists, if it does, then do a script scan against open ports.
if [[ -f ./ping-scan ]]
then
	if [[ -f ./script-scan ]]
	then
		printf "### Skipping -sV and -sC scan against open ports.  The file ./script-scan already exists. ###\n"
	else
		script_scan="sudo nmap $1 -p$open_ports -sV -sC -oN script-scan"
		printf "### Running scan: $script_scan ###\n\n" && $script_scan
		printf "### -sV -sC scan against open ports finished. ###\n\n"
	fi
else
	printf "### Skipping -sV -sC scan against open ports.  Unable to determine open ports from the file: ./ping-scan, it does not exist. ###\n"
fi

# Do UDP scan
if [[ -f ./udp-scan ]]
then
	printf "### Skipping -sU scan.  The file ./udp-scan already exists. ###"
else
	udp_scan="sudo nmap $1 -sU -oN udp-scan"
	printf "### Running scan: $udp_scan ###\n" && $udp_scan
	printf "### UDP scan finished. ###\n\n"
fi
